{"remainingRequest":"C:\\Users\\Daehyun\\Desktop\\sex\\team_project\\front\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Daehyun\\Desktop\\sex\\team_project\\front\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Daehyun\\Desktop\\sex\\team_project\\front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Daehyun\\Desktop\\sex\\team_project\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Daehyun\\Desktop\\sex\\team_project\\front\\node_modules\\buefy\\src\\components\\modal\\Modal.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Daehyun\\Desktop\\sex\\team_project\\front\\node_modules\\buefy\\src\\components\\modal\\Modal.vue","mtime":1536235400000},{"path":"C:\\Users\\Daehyun\\Desktop\\sex\\team_project\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1544630775545},{"path":"C:\\Users\\Daehyun\\Desktop\\sex\\team_project\\front\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1544630784027},{"path":"C:\\Users\\Daehyun\\Desktop\\sex\\team_project\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":1544630775208},{"path":"C:\\Users\\Daehyun\\Desktop\\sex\\team_project\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1544630775545},{"path":"C:\\Users\\Daehyun\\Desktop\\sex\\team_project\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":1544630784402}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { removeElement } from '../../utils/helpers';\nimport config from '../../utils/config';\nexport default {\n  name: 'BModal',\n  props: {\n    active: Boolean,\n    component: [Object, Function],\n    content: String,\n    programmatic: Boolean,\n    props: Object,\n    events: Object,\n    width: {\n      type: [String, Number],\n      default: 960\n    },\n    hasModalCard: Boolean,\n    animation: {\n      type: String,\n      default: 'zoom-out'\n    },\n    canCancel: {\n      type: [Array, Boolean],\n      default: function _default() {\n        return ['escape', 'x', 'outside', 'button'];\n      }\n    },\n    onCancel: {\n      type: Function,\n      default: function _default() {}\n    },\n    scroll: {\n      type: String,\n      default: function _default() {\n        return config.defaultModalScroll ? config.defaultModalScroll : 'clip';\n      },\n      validator: function validator(value) {\n        return ['clip', 'keep'].indexOf(value) >= 0;\n      }\n    }\n  },\n  data: function data() {\n    return {\n      isActive: this.active || false,\n      savedScrollTop: null,\n      newWidth: typeof this.width === 'number' ? this.width + 'px' : this.width\n    };\n  },\n  computed: {\n    cancelOptions: function cancelOptions() {\n      return typeof this.canCancel === 'boolean' ? this.canCancel ? ['escape', 'x', 'outside', 'button'] : [] : this.canCancel;\n    },\n    showX: function showX() {\n      return this.cancelOptions.indexOf('x') >= 0;\n    }\n  },\n  watch: {\n    active: function active(value) {\n      this.isActive = value;\n    },\n    isActive: function isActive() {\n      this.handleScroll();\n    }\n  },\n  methods: {\n    handleScroll: function handleScroll() {\n      if (typeof window === 'undefined') return;\n\n      if (this.scroll === 'clip') {\n        if (this.isActive) {\n          document.documentElement.classList.add('is-clipped');\n        } else {\n          document.documentElement.classList.remove('is-clipped');\n        }\n\n        return;\n      }\n\n      this.savedScrollTop = !this.savedScrollTop ? document.documentElement.scrollTop : this.savedScrollTop;\n\n      if (this.isActive) {\n        document.body.classList.add('is-noscroll');\n      } else {\n        document.body.classList.remove('is-noscroll');\n      }\n\n      if (this.isActive) {\n        document.body.style.top = \"-\".concat(this.savedScrollTop, \"px\");\n        return;\n      }\n\n      document.documentElement.scrollTop = this.savedScrollTop;\n      document.body.style.top = null;\n      this.savedScrollTop = null;\n    },\n\n    /**\n     * Close the Modal if canCancel and call the onCancel prop (function).\n     */\n    cancel: function cancel(method) {\n      if (this.cancelOptions.indexOf(method) < 0) return;\n      this.onCancel.apply(null, arguments);\n      this.close();\n    },\n\n    /**\n     * Call the onCancel prop (function).\n     * Emit events, and destroy modal if it's programmatic.\n     */\n    close: function close() {\n      var _this = this;\n\n      this.$emit('close');\n      this.$emit('update:active', false); // Timeout for the animation complete before destroying\n\n      if (this.programmatic) {\n        this.isActive = false;\n        setTimeout(function () {\n          _this.$destroy();\n\n          removeElement(_this.$el);\n        }, 150);\n      }\n    },\n\n    /**\n     * Keypress event that is bound to the document.\n     */\n    keyPress: function keyPress(event) {\n      // Esc key\n      if (this.isActive && event.keyCode === 27) this.cancel('escape');\n    }\n  },\n  created: function created() {\n    if (typeof window !== 'undefined') {\n      document.addEventListener('keyup', this.keyPress);\n    }\n  },\n  beforeMount: function beforeMount() {\n    // Insert the Modal component in body tag\n    // only if it's programmatic\n    this.programmatic && document.body.appendChild(this.$el);\n  },\n  mounted: function mounted() {\n    if (this.programmatic) this.isActive = true;else if (this.isActive) this.handleScroll();\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (typeof window !== 'undefined') {\n      document.removeEventListener('keyup', this.keyPress); // reset scroll\n\n      document.documentElement.classList.remove('is-clipped');\n      var savedScrollTop = !this.savedScrollTop ? document.documentElement.scrollTop : this.savedScrollTop;\n      document.body.classList.remove('is-noscroll');\n      document.documentElement.scrollTop = savedScrollTop;\n      document.body.style.top = null;\n    }\n  }\n};",{"version":3,"sources":["Modal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <transition :name=\"animation\">\r\n        <div v-if=\"isActive\" class=\"modal is-active\">\r\n            <div class=\"modal-background\" @click=\"cancel('outside')\"/>\r\n            <div\r\n                class=\"animation-content\"\r\n                :class=\"{ 'modal-content': !hasModalCard }\"\r\n                :style=\"{ maxWidth: newWidth }\">\r\n                <component\r\n                    v-if=\"component\"\r\n                    v-bind=\"props\"\r\n                    v-on=\"events\"\r\n                    :is=\"component\"\r\n                    @close=\"close\"/>\r\n                <div\r\n                    v-else-if=\"content\"\r\n                    v-html=\"content\"/>\r\n                <slot v-else/>\r\n            </div>\r\n            <button\r\n                type=\"button\"\r\n                v-if=\"showX\"\r\n                class=\"modal-close is-large\"\r\n                @click=\"cancel('x')\"/>\r\n        </div>\r\n    </transition>\r\n</template>\r\n\r\n<script>\r\n    import { removeElement } from '../../utils/helpers'\r\n    import config from '../../utils/config'\r\n\r\n    export default {\r\n        name: 'BModal',\r\n        props: {\r\n            active: Boolean,\r\n            component: [Object, Function],\r\n            content: String,\r\n            programmatic: Boolean,\r\n            props: Object,\r\n            events: Object,\r\n            width: {\r\n                type: [String, Number],\r\n                default: 960\r\n            },\r\n            hasModalCard: Boolean,\r\n            animation: {\r\n                type: String,\r\n                default: 'zoom-out'\r\n            },\r\n            canCancel: {\r\n                type: [Array, Boolean],\r\n                default: () => ['escape', 'x', 'outside', 'button']\r\n            },\r\n            onCancel: {\r\n                type: Function,\r\n                default: () => {}\r\n            },\r\n            scroll: {\r\n                type: String,\r\n                default: () => {\r\n                    return config.defaultModalScroll\r\n                        ? config.defaultModalScroll\r\n                        : 'clip'\r\n                },\r\n                validator: (value) => {\r\n                    return [\r\n                        'clip',\r\n                        'keep'\r\n                    ].indexOf(value) >= 0\r\n                }\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                isActive: this.active || false,\r\n                savedScrollTop: null,\r\n                newWidth: typeof this.width === 'number'\r\n                    ? this.width + 'px'\r\n                    : this.width\r\n            }\r\n        },\r\n        computed: {\r\n            cancelOptions() {\r\n                return typeof this.canCancel === 'boolean'\r\n                    ? this.canCancel\r\n                        ? ['escape', 'x', 'outside', 'button']\r\n                        : []\r\n                    : this.canCancel\r\n            },\r\n            showX() {\r\n                return this.cancelOptions.indexOf('x') >= 0\r\n            }\r\n        },\r\n        watch: {\r\n            active(value) {\r\n                this.isActive = value\r\n            },\r\n            isActive() {\r\n                this.handleScroll()\r\n            }\r\n        },\r\n        methods: {\r\n            handleScroll() {\r\n                if (typeof window === 'undefined') return\r\n\r\n                if (this.scroll === 'clip') {\r\n                    if (this.isActive) {\r\n                        document.documentElement.classList.add('is-clipped')\r\n                    } else {\r\n                        document.documentElement.classList.remove('is-clipped')\r\n                    }\r\n                    return\r\n                }\r\n\r\n                this.savedScrollTop = !this.savedScrollTop\r\n                    ? document.documentElement.scrollTop\r\n                    : this.savedScrollTop\r\n\r\n                if (this.isActive) {\r\n                    document.body.classList.add('is-noscroll')\r\n                } else {\r\n                    document.body.classList.remove('is-noscroll')\r\n                }\r\n\r\n                if (this.isActive) {\r\n                    document.body.style.top = `-${this.savedScrollTop}px`\r\n                    return\r\n                }\r\n\r\n                document.documentElement.scrollTop = this.savedScrollTop\r\n                document.body.style.top = null\r\n                this.savedScrollTop = null\r\n            },\r\n\r\n            /**\r\n             * Close the Modal if canCancel and call the onCancel prop (function).\r\n             */\r\n            cancel(method) {\r\n                if (this.cancelOptions.indexOf(method) < 0) return\r\n\r\n                this.onCancel.apply(null, arguments)\r\n                this.close()\r\n            },\r\n\r\n            /**\r\n             * Call the onCancel prop (function).\r\n             * Emit events, and destroy modal if it's programmatic.\r\n             */\r\n            close() {\r\n                this.$emit('close')\r\n                this.$emit('update:active', false)\r\n\r\n                // Timeout for the animation complete before destroying\r\n                if (this.programmatic) {\r\n                    this.isActive = false\r\n                    setTimeout(() => {\r\n                        this.$destroy()\r\n                        removeElement(this.$el)\r\n                    }, 150)\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Keypress event that is bound to the document.\r\n             */\r\n            keyPress(event) {\r\n                // Esc key\r\n                if (this.isActive && event.keyCode === 27) this.cancel('escape')\r\n            }\r\n        },\r\n        created() {\r\n            if (typeof window !== 'undefined') {\r\n                document.addEventListener('keyup', this.keyPress)\r\n            }\r\n        },\r\n        beforeMount() {\r\n            // Insert the Modal component in body tag\r\n            // only if it's programmatic\r\n            this.programmatic && document.body.appendChild(this.$el)\r\n        },\r\n        mounted() {\r\n            if (this.programmatic) this.isActive = true\r\n            else if (this.isActive) this.handleScroll()\r\n        },\r\n        beforeDestroy() {\r\n            if (typeof window !== 'undefined') {\r\n                document.removeEventListener('keyup', this.keyPress)\r\n                // reset scroll\r\n                document.documentElement.classList.remove('is-clipped')\r\n                const savedScrollTop = !this.savedScrollTop\r\n                    ? document.documentElement.scrollTop\r\n                    : this.savedScrollTop\r\n                document.body.classList.remove('is-noscroll')\r\n                document.documentElement.scrollTop = savedScrollTop\r\n                document.body.style.top = null\r\n            }\r\n        }\r\n    }\r\n</script>\r\n"],"sourceRoot":"node_modules\\buefy\\src\\components\\modal"}]}