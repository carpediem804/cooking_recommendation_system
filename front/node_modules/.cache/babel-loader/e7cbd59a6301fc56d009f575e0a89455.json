{"remainingRequest":"C:\\Users\\Daehyun\\Desktop\\sex\\team_project\\front\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Daehyun\\Desktop\\sex\\team_project\\front\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Daehyun\\Desktop\\sex\\team_project\\front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Daehyun\\Desktop\\sex\\team_project\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Daehyun\\Desktop\\sex\\team_project\\front\\src\\components\\blogtest.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Daehyun\\Desktop\\sex\\team_project\\front\\src\\components\\blogtest.vue","mtime":1544637494524},{"path":"C:\\Users\\Daehyun\\Desktop\\sex\\team_project\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1544630775545},{"path":"C:\\Users\\Daehyun\\Desktop\\sex\\team_project\\front\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1544630784027},{"path":"C:\\Users\\Daehyun\\Desktop\\sex\\team_project\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":1544630775208},{"path":"C:\\Users\\Daehyun\\Desktop\\sex\\team_project\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1544630775545},{"path":"C:\\Users\\Daehyun\\Desktop\\sex\\team_project\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":1544630784402}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport BIcon from \"buefy/src/components/icon/Icon\";\nexport default {\n  name: \"blogtest\",\n  components: {\n    BIcon: BIcon\n  },\n  data: function data() {\n    return {\n      fields: {\n        blogId: {\n          label: 'BlogNumber',\n          sortable: true\n        },\n        title: {\n          label: 'Title'\n        },\n        category: {\n          label: 'Category',\n          sortable: true\n        },\n        authorname: {\n          label: 'Author',\n          sortable: true\n        },\n        heart: {\n          lable: \"like number\",\n          sortable: true\n        },\n        action: {},\n        remove: {}\n      },\n      titleList: [],\n      currentPage: 1,\n      //perPage: 5,\n      // totalRows: titleList.length,\n      // pageOptions: [ 5, 10, 15 ],\n      // sortBy: null,\n      // sortDesc: false,\n      // sortDirection: 'asc',\n      filter: null,\n      modalInfo: {\n        title: '',\n        content: ''\n      },\n      test: 'http://54.190.129.64:8000/'\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    this.$http.get(\"http://54.190.129.64:8000/upload/img\").then(function (res) {\n      _this.titleList = res.data.bloglist;\n    });\n  },\n  methods: {\n    myRowClickHandler: function myRowClickHandler(record, index) {\n      console.log(\"클릭된다된다 \"); // 'record' will be the row data from items\n      // `index` will be the visible row number (available in the v-model 'shownItems')\n\n      console.log(record);\n      console.log(index); // This will be the item data for the row\n    },\n    onFiltered: function onFiltered(filteredItems) {\n      // Trigger pagination to update the number of buttons/pages due to filtering\n      this.totalRows = filteredItems.length;\n      this.currentPage = 1;\n    },\n    deletedata: function deletedata(data) {\n      var _this2 = this;\n\n      var deleteid = data.item._id;\n      this.$http.post('http://54.190.129.64:8000/delete/', {\n        removeId: deleteid\n      }).then(function (res) {\n        console.log(res);\n        console.log(\"res응답욈\");\n        console.log(res);\n\n        _this2.$http.get(\"http://54.190.129.64:8000/upload/img\").then(function (res) {\n          _this2.titleList = res.data.bloglist;\n        });\n      }); //console.log(\"data : \"+data);\n    }\n  }\n};",{"version":3,"sources":["blogtest.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmFA,OAAA,KAAA,MAAA,gCAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,KAAA,EAAA;AAAA,GAFA;AAGA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,MAAA,EAAA;AACA,QAAA,MAAA,EAAA;AACA,UAAA,KAAA,EAAA,YADA;AAEA,UAAA,QAAA,EAAA;AAFA,SADA;AAKA,QAAA,KAAA,EAAA;AACA,UAAA,KAAA,EAAA;AADA,SALA;AAQA,QAAA,QAAA,EAAA;AACA,UAAA,KAAA,EAAA,UADA;AAEA,UAAA,QAAA,EAAA;AAFA,SARA;AAYA,QAAA,UAAA,EAAA;AACA,UAAA,KAAA,EAAA,QADA;AAEA,UAAA,QAAA,EAAA;AAFA,SAZA;AAgBA,QAAA,KAAA,EAAA;AACA,UAAA,KAAA,EAAA,aADA;AAEA,UAAA,QAAA,EAAA;AAFA,SAhBA;AAoBA,QAAA,MAAA,EAAA,EApBA;AAuBA,QAAA,MAAA,EAAA;AAvBA,OADA;AA4BA,MAAA,SAAA,EAAA,EA5BA;AA6BA,MAAA,WAAA,EAAA,CA7BA;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA,MAAA,MAAA,EAAA,IApCA;AAqCA,MAAA,SAAA,EAAA;AAAA,QAAA,KAAA,EAAA,EAAA;AAAA,QAAA,OAAA,EAAA;AAAA,OArCA;AAuCA,MAAA,IAAA,EAAA;AAvCA,KAAA;AAyCA,GA7CA;AA8CA,EAAA,OA9CA,qBA8CA;AAAA;;AACA,SAAA,KAAA,CAAA,GAAA,CAAA,sCAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,MAAA,KAAA,CAAA,SAAA,GAAA,GAAA,CAAA,IAAA,CAAA,QAAA;AAEA,KAHA;AAIA,GAnDA;AAoDA,EAAA,OAAA,EAAA;AACA,IAAA,iBADA,6BACA,MADA,EACA,KADA,EACA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,SAAA,EADA,CAGA;AACA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,MAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,EANA,CAMA;AACA,KARA;AASA,IAAA,UATA,sBASA,aATA,EASA;AACA;AACA,WAAA,SAAA,GAAA,aAAA,CAAA,MAAA;AACA,WAAA,WAAA,GAAA,CAAA;AACA,KAbA;AAcA,IAAA,UAdA,sBAcA,IAdA,EAcA;AAAA;;AACA,UAAA,QAAA,GAAA,IAAA,CAAA,IAAA,CAAA,GAAA;AACA,WAAA,KAAA,CAAA,IAAA,CAAA,mCAAA,EAAA;AACA,QAAA,QAAA,EAAA;AADA,OAAA,EAEA,IAFA,CAEA,UAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,QAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,GAAA;;AACA,QAAA,MAAA,CAAA,KAAA,CAAA,GAAA,CAAA,sCAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,UAAA,MAAA,CAAA,SAAA,GAAA,GAAA,CAAA,IAAA,CAAA,QAAA;AACA,SAFA;AAGA,OATA,EAFA,CAaA;AAGA;AA9BA;AApDA,CAAA","sourcesContent":["<template>\r\n    <div id=\"blogtest\">\r\n        <h1>게시글 리스트</h1>\r\n        <b-container fluid>\r\n            <b-icon\r\n                    pack=\"fas\"\r\n                    icon=\"user\"\r\n                    size=\"is-small\">\r\n            </b-icon>\r\n        <b-row>\r\n            <b-col md=\"6\" class=\"my-1\">\r\n                <b-form-group horizontal label=\"Filter\" class=\"mb-0\">\r\n                    <b-input-group>\r\n                        <b-form-input v-model=\"filter\" placeholder=\"Type to Search\" class=\"input is is-rounded\" style=\"width: auto\"/>\r\n                        <b-input-group-append>\r\n                            <b-btn :disabled=\"!filter\" @click=\"filter = ''\" class=\"button is-info\">Clear</b-btn>\r\n                        </b-input-group-append>\r\n                    </b-input-group>\r\n                </b-form-group>\r\n            </b-col>\r\n\r\n        </b-row>\r\n        <b-table striped hover :items=\"titleList\" :fields=\"fields\"  @row-clicked=\"myRowClickHandler\" @filtered=\"onFiltered\" :filter=\"filter\" style=\"margin:auto\" :striped=\"striped\">\r\n            <template slot=\"action\" slot-scope=\"row\">\r\n                <!-- We use @click.stop here to prevent a 'row-clicked' event from also happening -->\r\n                <b-button size=\"sm\" class=\"button is-info\"@click.stop=\"row.toggleDetails\">\r\n                    {{ row.detailsShowing ? 'Hide' : 'Show' }} Details\r\n                </b-button>\r\n            </template>\r\n            <template slot=\"row-details\" slot-scope=\"row\">\r\n\r\n                <b-card style=\"margin: auto\" bg-variant=\"primary\"\r\n                        text-variant=\"white\"\r\n                        class=\"text-center\">\r\n                    <b-row class=\"mb-2\" >\r\n                        <b-col sm=\"3\" class=\"text-center\"><b>작성자:</b></b-col>\r\n                        <b-col>{{ row.item.authorname }}</b-col>\r\n                    </b-row>\r\n                    <b-row class=\"mb-2\">\r\n                        <b-col sm=\"3\" class=\"text-sm-right\"><b>제목:</b></b-col>\r\n                        <b-col>{{ row.item.title }}</b-col>\r\n                    </b-row>\r\n                    <b-row class=\"mb-2\">\r\n                        <b-col sm=\"3\" class=\"text-sm-right\"><b>사진:</b></b-col>\r\n                        <b-col><img v-bind:src=$url(test+row.item.image)></b-col>\r\n                    </b-row>\r\n                    <b-row class=\"mb-2\">\r\n                        <b-col sm=\"3\" class=\"text-sm-right\"><b>내용:</b></b-col>\r\n                        <b-col>{{ row.item.body }}</b-col>\r\n                    </b-row>\r\n                    <b-button size=\"sm\" class=\"button is-success\" @click=\"row.toggleDetails\">Hide Details</b-button>\r\n                </b-card>\r\n                <!--<b-card>-->\r\n                       <!--<ul>-->\r\n                        <!--<li v-for=\"(value, key) in row.item\" :key=\"key\">-->\r\n                            <!--<h1> {{key}}</h1>:<b>{{value}}</b>>-->\r\n                            <!--<div v-if=\"key==='image'\">-->\r\n                        <!--<img v-bind:src=$url(test+value)>-->\r\n                            <!--</div>-->\r\n                        <!--</li>-->\r\n                    <!--</ul>-->\r\n                <!--</b-card>-->\r\n            </template>\r\n            <template slot=\"remove\" slot-scope=\"row\" >\r\n                <b-button size=\"lg\" variant=\"Delete\" class =\"button is-danger\" @click=\"deletedata(row)\">\r\n                    delete\r\n                </b-button>\r\n            </template>\r\n\r\n\r\n        </b-table>\r\n\r\n        <!--<ul v-for=\"c in titleList\" v-bind:key=\"c.id\" >-->\r\n        <!--<li>{{c}}<br></li>-->\r\n        <!--</ul>-->\r\n        </b-container>\r\n        <!--<img src=\"http://localhost:8000/file-1544187170205.jpg\">-->\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\n\r\n    import BIcon from \"buefy/src/components/icon/Icon\";\r\n    export default {\r\n        name: \"blogtest\",\r\n        components: {BIcon},\r\n        data :function(){\r\n            return{\r\n                fields: {\r\n                      blogId : {\r\n                          label : 'BlogNumber',\r\n                          sortable : true\r\n                     },\r\n                      title : {\r\n                       label : 'Title'\r\n                       },\r\n                      category : {\r\n                          label : 'Category',\r\n                          sortable : true,\r\n                     },\r\n                       authorname: {\r\n                         label : 'Author',\r\n                         sortable : true,\r\n                    },\r\n                    heart : {\r\n                          lable : \"like number\",\r\n                        sortable : true\r\n                    },\r\n                    action : {\r\n\r\n                    },\r\n                    remove : {\r\n\r\n                    }\r\n            },\r\n                titleList : [],\r\n                currentPage: 1,\r\n                //perPage: 5,\r\n               // totalRows: titleList.length,\r\n               // pageOptions: [ 5, 10, 15 ],\r\n               // sortBy: null,\r\n               // sortDesc: false,\r\n               // sortDirection: 'asc',\r\n                filter: null,\r\n                modalInfo: { title: '', content: '' },\r\n\r\n                test : 'http://54.190.129.64:8000/'\r\n            }\r\n        },\r\n        created(){\r\n            this.$http.get(\"http://54.190.129.64:8000/upload/img\").then((res)=>{\r\n                this.titleList = res.data.bloglist;\r\n\r\n            })\r\n        },\r\n        methods : {\r\n            myRowClickHandler(record, index) {\r\n                console.log(\"클릭된다된다 \");\r\n\r\n                // 'record' will be the row data from items\r\n                // `index` will be the visible row number (available in the v-model 'shownItems')\r\n                console.log(record);\r\n                console.log(index);// This will be the item data for the row\r\n            },\r\n            onFiltered (filteredItems) {\r\n                // Trigger pagination to update the number of buttons/pages due to filtering\r\n                this.totalRows = filteredItems.length\r\n                this.currentPage = 1\r\n            },\r\n            deletedata(data){\r\n                let deleteid = data.item._id;\r\n                this.$http.post('http://54.190.129.64:8000/delete/',{\r\n                    removeId: deleteid\r\n                }).then(res=>{\r\n                    console.log(res);\r\n                    console.log(\"res응답욈\");\r\n                    console.log(res)\r\n                    this.$http.get(\"http://54.190.129.64:8000/upload/img\").then((res)=>{\r\n                        this.titleList = res.data.bloglist;\r\n                    })\r\n                })\r\n\r\n                //console.log(\"data : \"+data);\r\n\r\n\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"src\\components"}]}