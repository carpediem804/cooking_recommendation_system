{"remainingRequest":"C:\\Users\\Kim Yong Pyo\\Desktop\\asd\\team_project\\front\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Kim Yong Pyo\\Desktop\\asd\\team_project\\front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Kim Yong Pyo\\Desktop\\asd\\team_project\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Kim Yong Pyo\\Desktop\\asd\\team_project\\front\\src\\components\\addBlog.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Kim Yong Pyo\\Desktop\\asd\\team_project\\front\\src\\components\\addBlog.vue","mtime":1544071759355},{"path":"C:\\Users\\Kim Yong Pyo\\Desktop\\asd\\team_project\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1543754855057},{"path":"C:\\Users\\Kim Yong Pyo\\Desktop\\asd\\team_project\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":1543754854447},{"path":"C:\\Users\\Kim Yong Pyo\\Desktop\\asd\\team_project\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1543754855057},{"path":"C:\\Users\\Kim Yong Pyo\\Desktop\\asd\\team_project\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":1543754888620}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// Imports\nimport firebase from 'firebase';\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      blog: {\n        title: '',\n        content: '',\n        categories: [],\n        author: '',\n        imgFile: ''\n      },\n      authors: ['The Net Ninja', 'The Angular Avenger', 'The Vue Vindicator'],\n      submitted: false\n    };\n  },\n  methods: {\n    post: function post() {\n      console.log(\"post 됨 \");\n      this.$http.post('http://localhost:8000/upload', {\n        title: this.blog.title,\n        bodycotent: this.blog.content,\n        category: this.blog.categories,\n        imgFile: this.blog.imgFile,\n        blogId: this.$store.state.blogs.length + 1\n      }).then(function (data) {\n        this.submitted = true;\n      });\n    },\n    upload: function upload(name, files) {\n      var _this = this;\n\n      console.log(\"upload되냐되냐 \");\n      var formData = new FormData();\n      console.log(\"값 넣기전 \" + formData);\n      formData.append(name, files[0], files[0].name);\n      console.log(\"값넣은후 \" + formData);\n      axios.post(\"http://localhost:3000/uploads\", formData, {\n        params: {\n          user: this.user.userId\n        }\n      }).then(function (response) {\n        setTimeout(function () {\n          _this.loading = false;\n\n          _this.getImages();\n\n          _this.$refs.uploadInput.value = undefined;\n        }, 900);\n      }).catch(function (e) {\n        _this.errors.push(e);\n      }); //const url = \"http://127.0.0.1:12010/upload/1\";\n      //  axios.post(url, formData).then(response => {\n      //    console.log(response);\n      //  })\n    },\n    createImage: function createImage(file) {\n      var image = new Image();\n      var reader = new FileReader();\n      var vm = this;\n\n      reader.onload = function (e) {\n        vm.imgFile = e.target.result;\n      };\n\n      reader.readAsDataURL(file);\n    },\n    test: function test() {\n      var _this2 = this;\n\n      firebase.firestore().collection('users').doc(firebase.auth().currentUser.email).get().then(function (doc) {\n        _this2.blog.author = doc.data().name;\n      }); //행님 유저 정보 읽어오는 함수입니다\n    }\n  },\n  mounted: function mounted() {\n    this.test();\n  }\n};",{"version":3,"sources":["addBlog.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div id=\"add-blog\">\r\n        <h2>게시판 글올리기</h2>\r\n        <form v-if=\"!submitted\">\r\n            <label>제목:</label>\r\n            <input type=\"text\" v-model.lazy=\"blog.title\" required />\r\n            <label>내용:</label>\r\n            <textarea v-model.lazy.trim=\"blog.content\"></textarea>\r\n            <div id=\"checkboxes\">\r\n                <p>Categories:</p>\r\n                <label>한식</label>\r\n                <input type=\"checkbox\" value=\"한식\" v-model=\"blog.categories\" />\r\n                <label>중식</label>\r\n                <input type=\"checkbox\" value=\"중식\" v-model=\"blog.categories\" />\r\n                <label>일식</label>\r\n                <input type=\"checkbox\" value=\"일식\" v-model=\"blog.categories\" />\r\n                <label>양식</label>\r\n                <input type=\"checkbox\" value=\"양식\" v-model=\"blog.categories\" />\r\n            </div>\r\n\r\n            <div class=\"dropbox\">\r\n                <input class=\"input-file\" type=\"file\" name=\"myfile\"\r\n                       @change=\"upload($event.target.name, $event.target.files)\"\r\n                       @drop=\"upload($event.target.name, $event.target.files)\">\r\n                <div v-if=\"!imgFile\">\r\n                    <h2>파일을 드래그해서 드랍해주세요. </h2>\r\n                </div>\r\n                <div v-else>\r\n                    <img :src=\"imgFile\" />\r\n                </div>\r\n            </div>\r\n\r\n            <label>Author: {{blog.author}}</label><!--유저 정보 읽어서 이름 뽑도록 수정-->\r\n            <!--<select v-model=\"blog.author\">\r\n                <option v-for=\"author in authors\">{{ author }}</option>\r\n            </select>-->\r\n            <hr />\r\n            <button v-on:click.prevent=\"post\">Add Blog</button>\r\n        </form>\r\n        <div v-if=\"submitted\">\r\n            <h3>Thanks for adding your post</h3>\r\n        </div>\r\n        <div id=\"preview\">\r\n            <h3>Preview</h3>\r\n            <p>제목: {{ blog.title }}</p>\r\n            <p>내용:</p>\r\n            <p style=\"white-space: pre\">{{ blog.content }}</p>\r\n            <p>Categories:</p>\r\n            <ul>\r\n                <li v-for=\"category in blog.categories\">{{ category }}</li>\r\n            </ul>\r\n            <p>Author: {{ blog.author }}</p>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    // Imports\r\n    import firebase from 'firebase'\r\n    import axios from 'axios'\r\n\r\n    export default {\r\n        data () {\r\n            return {\r\n                blog: {\r\n                    title: '',\r\n                    content: '',\r\n                    categories: [],\r\n                    author: '',\r\n                    imgFile: ''\r\n                },\r\n                authors: ['The Net Ninja', 'The Angular Avenger', 'The Vue Vindicator'],\r\n                submitted: false\r\n            }\r\n        },\r\n        methods: {\r\n            post: function(){\r\n                console.log(\"post 됨 \")\r\n                this.$http.post('http://localhost:8000/upload', {\r\n                    title: this.blog.title,\r\n                    bodycotent: this.blog.content,\r\n                    category: this.blog.categories,\r\n                    imgFile: this.blog.imgFile,\r\n                    blogId: this.$store.state.blogs.length + 1\r\n                }).then(function(data){\r\n                    this.submitted = true;\r\n                });\r\n            },\r\n            upload(name, files) {\r\n                console.log(\"upload되냐되냐 \");\r\n                const formData = new FormData();\r\n                console.log(\"값 넣기전 \" + formData);\r\n                formData.append(name, files[0], files[0].name);\r\n                console.log(\"값넣은후 \"+ formData);\r\n\r\n                axios.post(`http://localhost:3000/uploads`, formData, {\r\n                    params: {\r\n                        user: this.user.userId\r\n                    }\r\n                })\r\n                    .then(response => {\r\n                        setTimeout(() => {\r\n                            this.loading = false\r\n                            this.getImages()\r\n                            this.$refs.uploadInput.value = undefined\r\n                        }, 900)\r\n                    })\r\n                    .catch(e => {\r\n                        this.errors.push(e)\r\n                    })\r\n\r\n\r\n                //const url = \"http://127.0.0.1:12010/upload/1\";\r\n                //  axios.post(url, formData).then(response => {\r\n                //    console.log(response);\r\n                //  })\r\n            },\r\n            createImage(file) {\r\n                var image = new Image();\r\n                var reader = new FileReader();\r\n                var vm = this;\r\n\r\n                reader.onload = (e) => {\r\n                    vm.imgFile = e.target.result;\r\n                };\r\n                reader.readAsDataURL(file);\r\n            },\r\n            test:function(){\r\n                firebase.firestore().collection('users').doc(firebase.auth().currentUser.email).get().then(doc=>{\r\n                    this.blog.author=doc.data().name\r\n                })//행님 유저 정보 읽어오는 함수입니다\r\n            }\r\n        },\r\n        mounted(){\r\n            this.test()\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    #add-blog *{\r\n        box-sizing: border-box;\r\n    }\r\n    #add-blog{\r\n        margin: 20px auto;\r\n        max-width: 500px;\r\n    }\r\n    label{\r\n        display: block;\r\n        margin: 20px 0 10px;\r\n    }\r\n    input[type=\"text\"], textarea{\r\n        display: block;\r\n        width: 100%;\r\n        padding: 8px;\r\n    }\r\n    #preview{\r\n        padding: 10px 20px;\r\n        border: 1px dotted #ccc;\r\n        margin: 30px 0;\r\n    }\r\n    h3{\r\n        margin-top: 10px;\r\n    }\r\n    #checkboxes input{\r\n        display: inline-block;\r\n        margin-right: 10px;\r\n    }\r\n    #checkboxes label{\r\n        display: inline-block;\r\n        margin-top: 0;\r\n    }\r\n    .dropbox {\r\n        outline: 2px dashed #aaa;\r\n        background: #7fb4dd;\r\n        width: 300px;\r\n        height: 300px;\r\n        position: relative;\r\n        margin: 0 auto;\r\n    }\r\n    img{\r\n        width: 300px;\r\n        height: 300px;\r\n    }\r\n    .dropbox > h2{\r\n        position: absolute;\r\n        top: 50px;\r\n        left: 0;\r\n        z-index: 2;\r\n    }\r\n    .input-file{\r\n        position: absolute;\r\n        opacity: 0;\r\n        width:100%;\r\n        height:100%;\r\n        top:0;\r\n        left:0;\r\n        z-index: 3;\r\n    }\r\n</style>\r\n"],"sourceRoot":"src\\components"}]}