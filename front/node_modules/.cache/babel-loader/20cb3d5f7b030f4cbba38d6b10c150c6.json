{"remainingRequest":"C:\\Users\\Daehyun\\Desktop\\sex\\team_project\\front\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Daehyun\\Desktop\\sex\\team_project\\front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Daehyun\\Desktop\\sex\\team_project\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Daehyun\\Desktop\\sex\\team_project\\front\\node_modules\\buefy\\src\\components\\dropdown\\Dropdown.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Daehyun\\Desktop\\sex\\team_project\\front\\node_modules\\buefy\\src\\components\\dropdown\\Dropdown.vue","mtime":1536235400000},{"path":"C:\\Users\\Daehyun\\Desktop\\sex\\team_project\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1544630775545},{"path":"C:\\Users\\Daehyun\\Desktop\\sex\\team_project\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":1544630775208},{"path":"C:\\Users\\Daehyun\\Desktop\\sex\\team_project\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1544630775545},{"path":"C:\\Users\\Daehyun\\Desktop\\sex\\team_project\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":1544630784402}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'BDropdown',\n  props: {\n    value: {\n      type: [String, Number, Boolean, Object, Array, Symbol, Function],\n      default: null\n    },\n    disabled: Boolean,\n    hoverable: Boolean,\n    inline: Boolean,\n    position: {\n      type: String,\n      validator: function validator(value) {\n        return ['is-top-right', 'is-top-left', 'is-bottom-left'].indexOf(value) > -1;\n      }\n    },\n    mobileModal: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data: function data() {\n    return {\n      selected: this.value,\n      isActive: false,\n      _isDropdown: true // Used internally by DropdownItem\n\n    };\n  },\n  computed: {\n    rootClasses: function rootClasses() {\n      return [this.position, {\n        'is-disabled': this.disabled,\n        'is-hoverable': this.hoverable,\n        'is-inline': this.inline,\n        'is-active': this.isActive || this.inline,\n        'is-mobile-modal': this.isMobileModal\n      }];\n    },\n    isMobileModal: function isMobileModal() {\n      return this.mobileModal && !this.inline && !this.hoverable;\n    }\n  },\n  watch: {\n    /**\n     * When v-model is changed set the new selected item.\n     */\n    value: function value(_value) {\n      this.selected = _value;\n    },\n\n    /**\n     * Emit event when isActive value is changed.\n     */\n    isActive: function isActive(value) {\n      this.$emit('active-change', value);\n    }\n  },\n  methods: {\n    /**\n     * Click listener from DropdownItem.\n     *   1. Set new selected item.\n     *   2. Emit input event to update the user v-model.\n     *   3. Close the dropdown.\n     */\n    selectItem: function selectItem(value) {\n      if (this.selected !== value) {\n        this.$emit('change', value);\n        this.selected = value;\n      }\n\n      this.$emit('input', value);\n      this.isActive = false;\n    },\n\n    /**\n     * White-listed items to not close when clicked.\n     */\n    isInWhiteList: function isInWhiteList(el) {\n      if (el === this.$refs.dropdownMenu) return true;\n      if (el === this.$refs.trigger) return true; // All chidren from dropdown\n\n      if (this.$refs.dropdownMenu !== undefined) {\n        var children = this.$refs.dropdownMenu.querySelectorAll('*');\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var child = _step.value;\n\n            if (el === child) {\n              return true;\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      } // All children from trigger\n\n\n      if (this.$refs.trigger !== undefined) {\n        var _children = this.$refs.trigger.querySelectorAll('*');\n\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = _children[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var _child = _step2.value;\n\n            if (el === _child) {\n              return true;\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Close dropdown if clicked outside.\n     */\n    clickedOutside: function clickedOutside(event) {\n      if (this.inline) return;\n      if (!this.isInWhiteList(event.target)) this.isActive = false;\n    },\n\n    /**\n     * Toggle dropdown if it's not disabled.\n     */\n    toggle: function toggle() {\n      var _this = this;\n\n      if (this.disabled || this.hoverable) return;\n\n      if (!this.isActive) {\n        // if not active, toggle after clickOutside event\n        // this fixes toggling programmatic\n        this.$nextTick(function () {\n          _this.isActive = !_this.isActive;\n        });\n      } else {\n        this.isActive = !this.isActive;\n      }\n    }\n  },\n  created: function created() {\n    if (typeof window !== 'undefined') {\n      document.addEventListener('click', this.clickedOutside);\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (typeof window !== 'undefined') {\n      document.removeEventListener('click', this.clickedOutside);\n    }\n  }\n};",{"version":3,"sources":["Dropdown.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"dropdown\" :class=\"rootClasses\">\r\n        <div\r\n            v-if=\"!inline\"\r\n            role=\"button\"\r\n            ref=\"trigger\"\r\n            class=\"dropdown-trigger\"\r\n            @click=\"toggle\">\r\n            <slot name=\"trigger\"/>\r\n        </div>\r\n\r\n        <transition name=\"fade\">\r\n            <div\r\n                v-if=\"isMobileModal\"\r\n                v-show=\"isActive\"\r\n                class=\"background\"\r\n            />\r\n        </transition>\r\n        <transition name=\"fade\">\r\n            <div\r\n                v-show=\"(!disabled && (isActive || hoverable)) || inline\"\r\n                ref=\"dropdownMenu\"\r\n                class=\"dropdown-menu\">\r\n                <div class=\"dropdown-content\">\r\n                    <slot/>\r\n                </div>\r\n            </div>\r\n        </transition>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: 'BDropdown',\r\n        props: {\r\n            value: {\r\n                type: [String, Number, Boolean, Object, Array, Symbol, Function],\r\n                default: null\r\n            },\r\n            disabled: Boolean,\r\n            hoverable: Boolean,\r\n            inline: Boolean,\r\n            position: {\r\n                type: String,\r\n                validator(value) {\r\n                    return [\r\n                        'is-top-right',\r\n                        'is-top-left',\r\n                        'is-bottom-left'\r\n                    ].indexOf(value) > -1\r\n                }\r\n            },\r\n            mobileModal: {\r\n                type: Boolean,\r\n                default: true\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                selected: this.value,\r\n                isActive: false,\r\n                _isDropdown: true // Used internally by DropdownItem\r\n            }\r\n        },\r\n        computed: {\r\n            rootClasses() {\r\n                return [this.position, {\r\n                    'is-disabled': this.disabled,\r\n                    'is-hoverable': this.hoverable,\r\n                    'is-inline': this.inline,\r\n                    'is-active': this.isActive || this.inline,\r\n                    'is-mobile-modal': this.isMobileModal\r\n                }]\r\n            },\r\n            isMobileModal() {\r\n                return this.mobileModal && !this.inline && !this.hoverable\r\n            }\r\n        },\r\n        watch: {\r\n            /**\r\n             * When v-model is changed set the new selected item.\r\n             */\r\n            value(value) {\r\n                this.selected = value\r\n            },\r\n\r\n            /**\r\n             * Emit event when isActive value is changed.\r\n             */\r\n            isActive(value) {\r\n                this.$emit('active-change', value)\r\n            }\r\n        },\r\n        methods: {\r\n            /**\r\n             * Click listener from DropdownItem.\r\n             *   1. Set new selected item.\r\n             *   2. Emit input event to update the user v-model.\r\n             *   3. Close the dropdown.\r\n             */\r\n            selectItem(value) {\r\n                if (this.selected !== value) {\r\n                    this.$emit('change', value)\r\n                    this.selected = value\r\n                }\r\n                this.$emit('input', value)\r\n                this.isActive = false\r\n            },\r\n\r\n            /**\r\n             * White-listed items to not close when clicked.\r\n             */\r\n            isInWhiteList(el) {\r\n                if (el === this.$refs.dropdownMenu) return true\r\n                if (el === this.$refs.trigger) return true\r\n                // All chidren from dropdown\r\n                if (this.$refs.dropdownMenu !== undefined) {\r\n                    const children = this.$refs.dropdownMenu.querySelectorAll('*')\r\n                    for (const child of children) {\r\n                        if (el === child) {\r\n                            return true\r\n                        }\r\n                    }\r\n                }\r\n                // All children from trigger\r\n                if (this.$refs.trigger !== undefined) {\r\n                    const children = this.$refs.trigger.querySelectorAll('*')\r\n                    for (const child of children) {\r\n                        if (el === child) {\r\n                            return true\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return false\r\n            },\r\n\r\n            /**\r\n             * Close dropdown if clicked outside.\r\n             */\r\n            clickedOutside(event) {\r\n                if (this.inline) return\r\n\r\n                if (!this.isInWhiteList(event.target)) this.isActive = false\r\n            },\r\n\r\n            /**\r\n             * Toggle dropdown if it's not disabled.\r\n             */\r\n            toggle() {\r\n                if (this.disabled || this.hoverable) return\r\n\r\n                if (!this.isActive) {\r\n                    // if not active, toggle after clickOutside event\r\n                    // this fixes toggling programmatic\r\n                    this.$nextTick(() => { this.isActive = !this.isActive })\r\n                } else {\r\n                    this.isActive = !this.isActive\r\n                }\r\n            }\r\n        },\r\n        created() {\r\n            if (typeof window !== 'undefined') {\r\n                document.addEventListener('click', this.clickedOutside)\r\n            }\r\n        },\r\n        beforeDestroy() {\r\n            if (typeof window !== 'undefined') {\r\n                document.removeEventListener('click', this.clickedOutside)\r\n            }\r\n        }\r\n    }\r\n</script>\r\n"],"sourceRoot":"node_modules\\buefy\\src\\components\\dropdown"}]}