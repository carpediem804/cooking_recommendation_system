{"remainingRequest":"C:\\Users\\Daehyun\\Desktop\\sex\\team_project\\front\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Daehyun\\Desktop\\sex\\team_project\\front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Daehyun\\Desktop\\sex\\team_project\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Daehyun\\Desktop\\sex\\team_project\\front\\src\\components\\showContent.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Daehyun\\Desktop\\sex\\team_project\\front\\src\\components\\showContent.vue","mtime":1544630785161},{"path":"C:\\Users\\Daehyun\\Desktop\\sex\\team_project\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1544630775545},{"path":"C:\\Users\\Daehyun\\Desktop\\sex\\team_project\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":1544630775208},{"path":"C:\\Users\\Daehyun\\Desktop\\sex\\team_project\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1544630775545},{"path":"C:\\Users\\Daehyun\\Desktop\\sex\\team_project\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":1544630784402}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport BField from \"buefy/src/components/field/Field\";\nimport BInput from \"buefy/src/components/input/Input\";\nimport firebase from 'firebase';\nimport axios from 'axios';\nexport default {\n  name: 'showContent',\n  components: {\n    BInput: BInput,\n    BField: BField\n  },\n  data: function data() {\n    return {\n      blog: {\n        title: '',\n        content: '',\n        categories: [],\n        author: '',\n        file: ''\n      },\n      //authors: ['The Net Ninja', 'The Angular Avenger', 'The Vue Vindicator'],\n      submitted: false\n    };\n  },\n  methods: {\n    post: function post() {\n      console.log(\"post 됨 \");\n      axios.defaults.headers.post['Content-Type'] = 'multipart/form-data';\n      var formData = new FormData();\n      formData.append('file', this.file);\n      console.log(this.blog.title);\n      this.submitted = true;\n      axios.post('http://localhost:8000/upload/img', formData, {\n        params: {\n          title: this.blog.title,\n          bodycotent: this.blog.content,\n          category: this.blog.categories,\n          // blogId: this.$store.state.blogs.length + 1,\n          author: this.blog.author\n        }\n      }).then(function (data) {\n        //this.blog.blogId\n        this.submitted = true;\n        console.log(\"submitted가 true 됨 \");\n        console.log(data); //this.submitted = true;\n        //console.log(this.submitted);\n      });\n    },\n    upload: function upload(name, files) {\n      axios.defaults.headers.post['Content-Type'] = 'multipart/form-data'; //  const formData = new FormData();\n      //   formData.append(name, files[0], files[0].name);\n\n      this.createImage(files[0]);\n      this.file = files[0];\n      var formData = new FormData();\n      formData.append('file', this.file);\n      /*\r\n                      alert(\"upLoad 함수 실행\" );\r\n                                        axios.post(`http://localhost:8000/upload/img`, formData, {\r\n                                            params: {\r\n                                              user: '5c0a4266e1f4750640b389ab',\r\n                                              title: this.blog.title,\r\n                                            }\r\n                                        }).catch(e => {\r\n                                              this.errors.push(e)\r\n                                          })\r\n      */\n    },\n    createImage: function createImage(file) {\n      var image = new Image();\n      var reader = new FileReader();\n      var vm = this;\n\n      reader.onload = function (e) {\n        vm.imgFile = e.target.result;\n      };\n\n      reader.readAsDataURL(file);\n    },\n    test: function test() {\n      var _this = this;\n\n      firebase.firestore().collection('users').doc(this.$store.state.user.email).get().then(function (doc) {\n        _this.blog.author = doc.data().nickName;\n      }); //행님 유저 정보 읽어오는 함수입니다\n    }\n  },\n  mounted: function mounted() {\n    this.test();\n  }\n};",{"version":3,"sources":["showContent.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n<div class=\"modal-card\" style=\"width:700px; margin:auto\">\r\n    대현행님 글작성 테스트 창입니다 원본 그대로 있습니다요\r\n    <header class=\"modal-card-head\">\r\n        <b-input type=\"text\" v-model.lazy=\"blog.title\" style=\"width:100%\" required placeholder=\"제목\"></b-input>\r\n    </header>\r\n    <section class=\"modal-card-body\">\r\n        <div class=\"tile is-ancestor\">\r\n            <div class=\"tile is-vertical is-8\">\r\n                <div class=\"tile\">\r\n                    <article class=\"tile is-child\">\r\n                        사진\r\n                        <div class=\"dropbox\">\r\n                            <input class=\"input-file\" type=\"file\" name=\"file\"\r\n                                   @change=\"upload($event.target.name, $event.target.files)\"\r\n                                   @drop=\"upload($event.target.name, $event.target.files)\">\r\n                            <div v-if=\"!imgFile\">\r\n                                <h2>파일을 드래그해서 드랍해주세요. </h2>\r\n                            </div>\r\n                            <div v-else>\r\n                                <img :src=\"imgFile\" />\r\n                            </div>\r\n                        </div>\r\n                    </article>\r\n                </div>\r\n                <div class=\"tile\">\r\n                    <div class=\"content\" style=\"width:100%;\">\r\n                        <strong>{{blog.author}}</strong> <small>({{this.$store.state.user.email}})</small> <!--유저 정보 -->\r\n                        <br>\r\n                        <label>내용:</label>\r\n                        <textarea class=\"textarea\" rows=\"10\" v-model.lazy.trim=\"blog.content\"></textarea>\r\n                        <div id=\"checkboxes\">\r\n                            <p>Categories:</p>\r\n                            <label>한식</label>\r\n                            <input type=\"checkbox\" value=\"한식\" v-model=\"blog.categories\" />\r\n                            <label>중식</label>\r\n                            <input type=\"checkbox\" value=\"중식\" v-model=\"blog.categories\" />\r\n                            <label>일식</label>\r\n                            <input type=\"checkbox\" value=\"일식\" v-model=\"blog.categories\" />\r\n                            <label>양식</label>\r\n                            <input type=\"checkbox\" value=\"양식\" v-model=\"blog.categories\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"tile\">\r\n                <article class=\"tile notification is-warning\">\r\n                    요리 재료 선택해서 태그 추가하는거??\r\n                </article>\r\n            </div>\r\n        </div>\r\n    </section>\r\n    <footer class=\"modal-card-foot\" style=\"width: 100%\">\r\n        <button class=\"button is-primary\" style=\"margin: auto\" v-on:click=\"post()\">Add Blog</button>\r\n    </footer>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\n\r\nimport BField from \"buefy/src/components/field/Field\";\r\nimport BInput from \"buefy/src/components/input/Input\";\r\nimport firebase from 'firebase'\r\nimport axios from 'axios'\r\nexport default{\r\n    name:'showContent',\r\n    components: {BInput, BField},\r\n    data () {\r\n        return {\r\n            blog: {\r\n                title: '',\r\n                content: '',\r\n                categories: [],\r\n                author: '',\r\n                file: ''\r\n\r\n            },\r\n            //authors: ['The Net Ninja', 'The Angular Avenger', 'The Vue Vindicator'],\r\n            submitted: false\r\n        }\r\n    },\r\n    methods: {\r\n        post: function(){\r\n            console.log(\"post 됨 \");\r\n            axios.defaults.headers.post['Content-Type'] = 'multipart/form-data';\r\n            let formData = new FormData();\r\n            formData.append('file', this.file);\r\n            console.log(this.blog.title);\r\n            this.submitted = true;\r\n            axios.post('http://localhost:8000/upload/img', formData,{\r\n                params: {\r\n                    title: this.blog.title,\r\n                    bodycotent: this.blog.content,\r\n                    category: this.blog.categories,\r\n                    // blogId: this.$store.state.blogs.length + 1,\r\n                    author : this.blog.author\r\n                }\r\n\r\n            }).then(function(data){\r\n                //this.blog.blogId\r\n                this.submitted = true;\r\n                console.log(\"submitted가 true 됨 \")\r\n                console.log(data);\r\n                //this.submitted = true;\r\n                //console.log(this.submitted);\r\n            });\r\n        },\r\n        upload(name, files) {\r\n\r\n            axios.defaults.headers.post['Content-Type'] = 'multipart/form-data';\r\n\r\n            //  const formData = new FormData();\r\n            //   formData.append(name, files[0], files[0].name);\r\n            this.createImage(files[0]);\r\n\r\n            this.file = files[0]\r\n            let formData = new FormData()\r\n            formData.append('file', this.file)\r\n            /*\r\n                            alert(\"upLoad 함수 실행\" );\r\n\r\n                                            axios.post(`http://localhost:8000/upload/img`, formData, {\r\n\r\n                                                params: {\r\n                                                    user: '5c0a4266e1f4750640b389ab',\r\n                                                    title: this.blog.title,\r\n\r\n                                                }\r\n\r\n                                            }).catch(e => {\r\n                                                    this.errors.push(e)\r\n                                                })\r\n            */\r\n\r\n        },\r\n        createImage(file) {\r\n            var image = new Image();\r\n            var reader = new FileReader();\r\n            var vm = this;\r\n\r\n            reader.onload = (e) => {\r\n                vm.imgFile = e.target.result;\r\n            };\r\n            reader.readAsDataURL(file);\r\n        },\r\n        test:function(){\r\n            firebase.firestore().collection('users').doc(this.$store.state.user.email).get().then(doc=>{\r\n                this.blog.author=doc.data().nickName\r\n            })//행님 유저 정보 읽어오는 함수입니다\r\n        }\r\n    },\r\n    mounted(){\r\n        this.test()\r\n    }\r\n\r\n}\r\n\r\n</script>\r\n<style scoped>\r\n    .dropbox {\r\n        outline: 2px dashed #aaa;\r\n        background: #7fb4dd;\r\n        width: 300px;\r\n        height: 300px;\r\n        position: relative;\r\n        margin: 0 auto;\r\n    }\r\n    .input-file{\r\n        position: absolute;\r\n        opacity: 0;\r\n        width:100%;\r\n        height:100%;\r\n        top:0;\r\n        left:0;\r\n        z-index: 3;\r\n    }\r\n    .modal-background{\r\n        background-color: gray;\r\n    }\r\n</style>\r\n"],"sourceRoot":"src\\components"}]}